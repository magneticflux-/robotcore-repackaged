apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 19
        // Required to bypass runtime Camera permissions
        //noinspection ExpiredTargetSdkVersion
        targetSdkVersion 19
        versionCode 14
        versionName "5.2.0-lite"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "armeabi-v7a"
        }

        consumerProguardFiles 'proguard-rules.pro'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

group = 'com.github.modular-ftc'
version = android.defaultConfig.versionName
project.archivesBaseName = 'robotcore-repackaged'

dependencies {
    // Original dependencies
    implementation "org.first.ftc:tensorflow-lite:5.2"
    implementation "org.first.ftc:tfod:5.2"

    // Repackaged dependencies
    implementation 'com.github.modular-ftc:vuforia-repackaged:5.2.1'

    // Android dependencies
    implementation 'com.android.support:support-annotations:28.0.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'org.danilopianini:gson-extras:0.2.1'

    implementation 'com.google.errorprone:javac:1.8.0-u20'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'androidx.versionedparcelable:versionedparcelable:1.1.0'

}

//For JitPack

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    options.encoding 'UTF-8'
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}